[versions]
agp = "8.12.3"
kotlin = "2.2.20"
coreKtx = "1.17.0"
kotlinxCoroutinesGuava = "1.10.2"
lifecycleRuntimeKtx = "2.9.3"
activityCompose = "1.11.0"
koinBom = "4.1.1"
koinAndroid = "4.1.0"
ktor = "3.3.0"
voyager = "1.1.0-beta03"
coroutines = "1.10.2"
splashscreen = "1.0.1"
datetime = "0.6.2"
immutable-collections = "0.4.0"
camerax-core = "1.5.0"
google-services = "4.4.3"
firebase-bom = "34.2.0"
androidX-identity = "1.5.0"
googleId = "1.1.1"
google-services-auth = "21.4.0"
crashlytics-plugin = "3.0.6"
detekt = "1.23.8"
paparazzi = "2.0.0-alpha02"
compose-multiplatform = "1.8.2"
buildKonfig = "0.17.1"

[libraries]
androidx-core-ktx = { group = "androidx.core", name = "core-ktx", version.ref = "coreKtx" }
androidx-lifecycle-runtime-ktx = { group = "androidx.lifecycle", name = "lifecycle-runtime-ktx", version.ref = "lifecycleRuntimeKtx" }
androidx-activity-compose = { group = "androidx.activity", name = "activity-compose", version.ref = "activityCompose" }
androidx-splashscreen = { module = "androidx.core:core-splashscreen", version.ref = "splashscreen" }

# Ktor
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-client-serialization = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-engine-okhttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }
ktor-engine-darwin = { module = "io.ktor:ktor-client-darwin", version.ref = "ktor" }
ktor-client-log = { module = "io.ktor:ktor-client-logging", version.ref = "ktor" }
ktor-client-auth = { module = "io.ktor:ktor-client-auth", version.ref = "ktor" }

# Voyager
voyager-navigator = { module = "cafe.adriel.voyager:voyager-navigator", version.ref = "voyager" }
voyager-screenmodel = { module = "cafe.adriel.voyager:voyager-screenmodel", version.ref = "voyager" }
voyager-koin = { module = "cafe.adriel.voyager:voyager-koin", version.ref = "voyager" }
voyager-transitions = { module = "cafe.adriel.voyager:voyager-transitions", version.ref = "voyager" }
voyager-tabs = { module = "cafe.adriel.voyager:voyager-tab-navigator", version.ref = "voyager" }

# Camerax
camerax-core = { module = "androidx.camera:camera-core", version.ref = "camerax-core" }
camerax-camera2 = { module = "androidx.camera:camera-camera2", version.ref = "camerax-core" }
camerax-lifecycle = { module = "androidx.camera:camera-lifecycle", version.ref = "camerax-core" }
camerax-view = { module = "androidx.camera:camera-view", version.ref = "camerax-core" }

# Koin
koin-bom = { module = "io.insert-koin:koin-bom", version.ref = "koinBom" }
koin-core = { module = "io.insert-koin:koin-core" }
koin-android = { module = "io.insert-koin:koin-android", version.ref = "koinAndroid" }

# Kotlin
coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }
coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "coroutines" }
datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "datetime" }
immutable-collections = { module = "org.jetbrains.kotlinx:kotlinx-collections-immutable", version.ref = "immutable-collections" }
kotlinx-coroutines-guava = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-guava", version.ref = "kotlinxCoroutinesGuava" }

# Gradle PLugins
kotlin-gradle-plugin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
kotlin-multiplatform-gradle-plugin = { module = "org.jetbrains.kotlin.multiplatform:org.jetbrains.kotlin.multiplatform.gradle.plugin", version.ref = "kotlin" }
android-library-gradle-plugin = { module = "com.android.library:com.android.library.gradle.plugin", version.ref = "agp" }
android-application-gradle-plugin = { module = "com.android.application:com.android.application.gradle.plugin", version.ref = "agp" }
detekt-gradle-plugin = { module = "io.gitlab.arturbosch.detekt:io.gitlab.arturbosch.detekt.gradle.plugin", version.ref = "detekt" }

# ML Kit
google-mlkit = { module = "com.google.mlkit:barcode-scanning", version = "17.3.0" }

# Firebase
firebase-bom = { module = "com.google.firebase:firebase-bom", version.ref = "firebase-bom" }
firebase-auth = { module = "com.google.firebase:firebase-auth" }
firebase-analytics = { module = "com.google.firebase:firebase-analytics" }

# Identity
identity-credentials-core = { module = "androidx.credentials:credentials", version.ref = "androidX-identity" }
identity-credentials-play = { module = "androidx.credentials:credentials-play-services-auth", version.ref = "androidX-identity" }
identity-googleid = { module = "com.google.android.libraries.identity.googleid:googleid", version.ref = "googleId" }

# Google Services
google-services-auth = { module = "com.google.android.gms:play-services-auth", version.ref = "google-services-auth" }

[plugins]
android-application = { id = "com.android.application", version.ref = "agp" }
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
kotlin-multiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
android-library = { id = "com.android.library", version.ref = "agp" }
google-services = { id = "com.google.gms.google-services", version.ref = "google-services" }
firebase-crashlytics = { id = "com.google.firebase.crashlytics", version.ref = "crashlytics-plugin" }
detekt = { id = "io.gitlab.arturbosch.detekt", version.ref = "detekt" }
paparazzi = { id = "app.cash.paparazzi", version.ref = "paparazzi" }
composeMultiplatform = { id = "org.jetbrains.compose", version.ref = "compose-multiplatform" }
composeCompiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
buildKonfig = { id = "com.codingfeline.buildkonfig", version.ref = "buildKonfig" }

[bundles]
voyager = ["voyager-navigator", "voyager-screenmodel", "voyager-koin"]
camerax = ["camerax-core", "camerax-camera2", "camerax-lifecycle", "camerax-view"]
identity = ["identity-credentials-core", "identity-credentials-play", "identity-googleid"]